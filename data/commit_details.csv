message,created,files_updated,diff
"chore(i18n,docs): processed translations (#45024)",1644080712,"['docs/i18n/japanese/FAQ.md', 'docs/i18n/japanese/curriculum-file-structure.md', 'docs/i18n/japanese/devops.md', 'docs/i18n/japanese/how-to-catch-outgoing-emails-locally.md', 'docs/i18n/japanese/how-to-help-with-video-challenges.md', 'docs/i18n/japanese/how-to-open-a-pull-request.md', 'docs/i18n/japanese/how-to-setup-freecodecamp-locally.md', 'docs/i18n/japanese/how-to-work-on-coding-challenges.md', 'docs/i18n/japanese/how-to-work-on-practice-projects.md', 'docs/i18n/portuguese/how-to-open-a-pull-request.md']","[('docs/i18n/japanese/FAQ.md', [51, 105], [51, 105]), ('docs/i18n/japanese/curriculum-file-structure.md', [51, 52, 71, 88], [51, 52, 71, 88]), ('docs/i18n/japanese/devops.md', [86, 161, 162, 163, 164, 165, 166, 198, 220, 267, 304, 310, 316, 353, 432, 441, 449, 451, 453, 459, 465, 472, 482, 484, 486, 488, 490, 496, 502, 508, 514, 520, 522, 524, 530, 532, 534, 536, 546, 553, 555, 568, 578, 580, 582, 584, 586, 592, 594, 600, 606, 608, 610, 612, 614, 616, 618, 620, 635, 637, 639, 641, 653, 659, 661, 663, 665, 667, 669, 671, 678, 680, 687, 689, 695, 701, 703, 705, 707, 713, 721, 728, 730, 736, 743, 749, 755, 761, 767, 780, 782, 784, 786, 796, 798, 808, 814, 820, 826, 832, 834, 836, 842, 848, 866, 868, 870, 872, 874, 876, 878, 880, 882, 889, 895, 901, 907, 914, 916, 918, 920, 922, 929, 931, 937, 939, 941, 943, 945, 947, 949, 951, 953, 954, 955, 956, 957, 958, 960, 962], [86, 161, 162, 163, 164, 165, 166, 198, 220, 267, 304, 310, 316, 353, 432, 441, 449, 451, 453, 459, 465, 472, 482, 484, 486, 488, 490, 496, 502, 508, 514, 520, 522, 524, 530, 532, 534, 536, 546, 553, 555, 568, 578, 580, 582, 584, 586, 592, 594, 600, 606, 608, 610, 612, 614, 616, 618, 620, 635, 637, 639, 641, 653, 659, 661, 663, 665, 667, 669, 671, 678, 680, 687, 689, 695, 701, 703, 705, 707, 713, 721, 728, 730, 736, 743, 749, 755, 761, 767, 780, 782, 784, 786, 796, 798, 808, 814, 820, 826, 832, 834, 836, 842, 848, 866, 868, 870, 872, 874, 876, 878, 880, 882, 889, 895, 901, 907, 914, 916, 918, 920, 922, 929, 931, 937, 939, 941, 943, 945, 947, 949, 951, 953, 954, 955, 956, 957, 958, 960, 962]), ('docs/i18n/japanese/how-to-catch-outgoing-emails-locally.md', [1], [1]), ('docs/i18n/japanese/how-to-help-with-video-challenges.md', [7], [7]), ('docs/i18n/japanese/how-to-open-a-pull-request.md', [47], [47]), ('docs/i18n/japanese/how-to-setup-freecodecamp-locally.md', [19, 23, 563], [19, 23, 563]), ('docs/i18n/japanese/how-to-work-on-coding-challenges.md', [498], [498]), ('docs/i18n/japanese/how-to-work-on-practice-projects.md', [100], [100]), ('docs/i18n/portuguese/how-to-open-a-pull-request.md', [47], [47])]"
"chore(i18n,learn): processed translations (#45027)",1644080451,"['curriculum/challenges/japanese/04-data-visualization/json-apis-and-ajax/pre-filter-json-to-get-the-data-you-need.md', 'curriculum/challenges/portuguese/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md']","[('curriculum/challenges/japanese/04-data-visualization/json-apis-and-ajax/pre-filter-json-to-get-the-data-you-need.md', [11], [11]), ('curriculum/challenges/portuguese/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md', [48, 50, 51, 52, 54, 56, 57, 58, 77, 78, 79, 80, 81], [65])]"
"chore(i18n,client): processed translations (#45025)",1644080391,['client/i18n/locales/japanese/translations.json'],"[('client/i18n/locales/japanese/translations.json', [304, 305], [304, 305])]"
chore(deps): update dependency jest to v27.5.0,1644075359,"['package-lock.json', 'package.json']","[('package-lock.json', [86, 3779, 3780, 3781, 3784, 3787, 3788, 3875, 3876, 3877, 3880, 3881, 3882, 3883, 3884, 3890, 3891, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3899, 3900, 3901, 3902, 3903, 4001, 4002, 4003, 4006, 4007, 4009, 4016, 4017, 4018, 4021, 4024, 4025, 4026, 4033, 4034, 4035, 4038, 4039, 4040, 4047, 4048, 4049, 4053, 4054, 4055, 4056, 4062, 4068, 4069, 4070, 4071, 4149, 4150, 4151, 4208, 4209, 4210, 4214, 4231, 4232, 4233, 4236, 4237, 4246, 4247, 4248, 4251, 4252, 4253, 4254, 4261, 4262, 4263, 4267, 4272, 4273, 4274, 4275, 4375, 4376, 4377, 14783, 14784, 14785, 17142, 17143, 17144, 17147, 17148, 17151, 17153, 17498, 17499, 17500, 18320, 18321, 18322, 18325, 22608, 22609, 22610, 25032, 25033, 25034, 25037, 25038, 25039, 25040, 31748, 31749, 31750, 31753, 31755, 31773, 31774, 31775, 31778, 31787, 31788, 31789, 31792, 31793, 31794, 31799, 31801, 31802, 31803, 31804, 31805, 31806, 31807, 31896, 31897, 31898, 31901, 31902, 31903, 31906, 31908, 31909, 31910, 32047, 32048, 32049, 32053, 32054, 32055, 32060, 32061, 32062, 32063, 32064, 32065, 32066, 32067, 32068, 32069, 32070, 32072, 32173, 32174, 32175, 32179, 32180, 32181, 32258, 32259, 32260, 32270, 32271, 32272, 32275, 32277, 32278, 32279, 32356, 32357, 32358, 32361, 32362, 32363, 32365, 32366, 32374, 32375, 32376, 32379, 32380, 32381, 32383, 32384, 32391, 32392, 32393, 32400, 32401, 32402, 32405, 32410, 32411, 32412, 32413, 32414, 32435, 32436, 32437, 32464, 32465, 32466, 32469, 32470, 32471, 32472, 32476, 32478, 32479, 32480, 32481, 32482, 32483, 32484, 32749, 32750, 32751, 32754, 32755, 32762, 32763, 32764, 32768, 32769, 32770, 32847, 32848, 32849, 32853, 32856, 32858, 32946, 32947, 32948, 32951, 32976, 32977, 32978, 32985, 32986, 32987, 32990, 32992, 32993, 32995, 32996, 33006, 33007, 33008, 33011, 33012, 33013, 33099, 33100, 33101, 33104, 33105, 33106, 33107, 33108, 33112, 33113, 33114, 33115, 33116, 33117, 33118, 33119, 33120, 33121, 33122, 33189, 33190, 33191, 33230, 33231, 33232, 33233, 33234, 33235, 33236, 33237, 33238, 33239, 33240, 33241, 33247, 33248, 33249, 33250, 33251, 33252, 33253, 33254, 33342, 33343, 33344, 33348, 33355, 33356, 33357, 33365, 33366, 33371, 33372, 33373, 33374, 33375, 33376, 33377, 33378, 33380, 33491, 33492, 33493, 33496, 33500, 33584, 33585, 33586, 33589, 33592, 33594, 33683, 33684, 33685, 33688, 33689, 33693, 42301, 42302, 42303, 56678, 56679, 56680, 56683, 56686, 56687, 56749, 56750, 56751, 56754, 56755, 56756, 56757, 56758, 56764, 56765, 56766, 56767, 56768, 56769, 56770, 56771, 56772, 56773, 56774, 56775, 56776, 56777, 56842, 56843, 56844, 56847, 56848, 56850, 56854, 56855, 56856, 56859, 56862, 56863, 56864, 56868, 56869, 56870, 56873, 56874, 56875, 56879, 56880, 56881, 56885, 56886, 56887, 56888, 56894, 56900, 56901, 56902, 56903, 56952, 56953, 56954, 56997, 56998, 56999, 57003, 57016, 57017, 57018, 57021, 57022, 57028, 57029, 57030, 57033, 57034, 57035, 57036, 57040, 57041, 57042, 57046, 57051, 57052, 57053, 57054, 57126, 57127, 57128, 65085, 65086, 65087, 67043, 67044, 67045, 67048, 67049, 67052, 67054, 67312, 67313, 67314, 68093, 68094, 68095, 68098, 71496, 71497, 71498, 73364, 73365, 73366, 73369, 73370, 73371, 73372, 78403, 78404, 78405, 78408, 78410, 78414, 78415, 78416, 78419, 78425, 78426, 78427, 78430, 78431, 78432, 78437, 78439, 78440, 78441, 78442, 78443, 78444, 78445, 78509, 78510, 78511, 78514, 78515, 78516, 78519, 78521, 78522, 78523, 78618, 78619, 78620, 78624, 78625, 78626, 78631, 78632, 78633, 78634, 78635, 78636, 78637, 78638, 78639, 78640, 78641, 78643, 78711, 78712, 78713, 78717, 78718, 78719, 78774, 78775, 78776, 78783, 78784, 78785, 78788, 78790, 78791, 78792, 78847, 78848, 78849, 78852, 78853, 78854, 78856, 78857, 78862, 78863, 78864, 78867, 78868, 78869, 78871, 78872, 78876, 78877, 78878, 78882, 78883, 78884, 78887, 78893, 78894, 78895, 78896, 78897, 78909, 78910, 78911, 78931, 78932, 78933, 78936, 78937, 78938, 78939, 78943, 78945, 78946, 78947, 78948, 78949, 78950, 78951, 79154, 79155, 79156, 79159, 79160, 79164, 79165, 79166, 79170, 79171, 79172, 79227, 79228, 79229, 79233, 79236, 79238, 79301, 79302, 79303, 79306, 79318, 79319, 79320, 79324, 79325, 79326, 79329, 79331, 79332, 79334, 79335, 79399, 79400, 79401, 79404, 79405, 79406, 79410, 79411, 79412, 79415, 79416, 79417, 79418, 79419, 79423, 79424, 79425, 79426, 79427, 79428, 79429, 79430, 79431, 79432, 79433, 79479, 79480, 79481, 79512, 79513, 79514, 79515, 79516, 79517, 79518, 79519, 79520, 79521, 79522, 79523, 79529, 79530, 79531, 79532, 79533, 79534, 79535, 79536, 79599, 79600, 79601, 79605, 79609, 79610, 79611, 79619, 79620, 79625, 79626, 79627, 79628, 79629, 79630, 79631, 79632, 79634, 79714, 79715, 79716, 79719, 79723, 79785, 79786, 79787, 79790, 79793, 79795, 79856, 79857, 79858, 79861, 79862, 79866, 86361, 86362, 86363], [86, 3779, 3780, 3781, 3784, 3787, 3788, 3875, 3876, 3877, 3880, 3881, 3882, 3883, 3884, 3890, 3891, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3899, 3900, 3901, 3902, 3903, 4001, 4002, 4003, 4006, 4007, 4009, 4016, 4017, 4018, 4021, 4024, 4025, 4026, 4033, 4034, 4035, 4038, 4039, 4040, 4047, 4048, 4049, 4053, 4054, 4055, 4056, 4062, 4068, 4069, 4070, 4071, 4149, 4150, 4151, 4208, 4209, 4210, 4214, 4231, 4232, 4233, 4236, 4237, 4246, 4247, 4248, 4251, 4252, 4253, 4254, 4261, 4262, 4263, 4267, 4272, 4273, 4274, 4275, 4375, 4376, 4377, 14783, 14784, 14785, 17142, 17143, 17144, 17147, 17148, 17151, 17153, 17498, 17499, 17500, 18320, 18321, 18322, 18325, 22608, 22609, 22610, 25032, 25033, 25034, 25037, 25038, 25039, 25040, 31748, 31749, 31750, 31753, 31755, 31773, 31774, 31775, 31778, 31787, 31788, 31789, 31792, 31793, 31794, 31799, 31801, 31802, 31803, 31804, 31805, 31806, 31807, 31896, 31897, 31898, 31901, 31902, 31903, 31906, 31908, 31909, 31910, 32047, 32048, 32049, 32053, 32054, 32055, 32060, 32061, 32062, 32063, 32064, 32065, 32066, 32067, 32068, 32069, 32070, 32072, 32173, 32174, 32175, 32179, 32180, 32181, 32258, 32259, 32260, 32270, 32271, 32272, 32275, 32277, 32278, 32279, 32356, 32357, 32358, 32361, 32362, 32363, 32365, 32366, 32374, 32375, 32376, 32379, 32380, 32381, 32383, 32384, 32391, 32392, 32393, 32400, 32401, 32402, 32405, 32410, 32411, 32412, 32413, 32414, 32435, 32436, 32437, 32464, 32465, 32466, 32469, 32470, 32471, 32472, 32476, 32478, 32479, 32480, 32481, 32482, 32483, 32484, 32749, 32750, 32751, 32754, 32755, 32762, 32763, 32764, 32768, 32769, 32770, 32847, 32848, 32849, 32853, 32856, 32858, 32946, 32947, 32948, 32951, 32976, 32977, 32978, 32985, 32986, 32987, 32990, 32992, 32993, 32995, 32996, 33006, 33007, 33008, 33011, 33012, 33013, 33099, 33100, 33101, 33104, 33105, 33106, 33107, 33108, 33112, 33113, 33114, 33115, 33116, 33117, 33118, 33119, 33120, 33121, 33122, 33123, 33190, 33191, 33192, 33231, 33232, 33233, 33234, 33235, 33236, 33237, 33238, 33239, 33240, 33241, 33242, 33248, 33249, 33250, 33251, 33252, 33253, 33254, 33255, 33343, 33344, 33345, 33349, 33356, 33357, 33358, 33366, 33367, 33372, 33373, 33374, 33375, 33376, 33377, 33378, 33379, 33381, 33492, 33493, 33494, 33497, 33501, 33585, 33586, 33587, 33590, 33593, 33595, 33684, 33685, 33686, 33689, 33690, 33694, 42302, 42303, 42304, 56679, 56680, 56681, 56684, 56687, 56688, 56750, 56751, 56752, 56755, 56756, 56757, 56758, 56759, 56765, 56766, 56767, 56768, 56769, 56770, 56771, 56772, 56773, 56774, 56775, 56776, 56777, 56778, 56843, 56844, 56845, 56848, 56849, 56851, 56855, 56856, 56857, 56860, 56863, 56864, 56865, 56869, 56870, 56871, 56874, 56875, 56876, 56880, 56881, 56882, 56886, 56887, 56888, 56889, 56895, 56901, 56902, 56903, 56904, 56953, 56954, 56955, 56998, 56999, 57000, 57004, 57017, 57018, 57019, 57022, 57023, 57029, 57030, 57031, 57034, 57035, 57036, 57037, 57041, 57042, 57043, 57047, 57052, 57053, 57054, 57055, 57127, 57128, 57129, 65086, 65087, 65088, 67044, 67045, 67046, 67049, 67050, 67053, 67055, 67313, 67314, 67315, 68094, 68095, 68096, 68099, 71497, 71498, 71499, 73365, 73366, 73367, 73370, 73371, 73372, 73373, 78404, 78405, 78406, 78409, 78411, 78415, 78416, 78417, 78420, 78426, 78427, 78428, 78431, 78432, 78433, 78438, 78440, 78441, 78442, 78443, 78444, 78445, 78446, 78510, 78511, 78512, 78515, 78516, 78517, 78520, 78522, 78523, 78524, 78619, 78620, 78621, 78625, 78626, 78627, 78632, 78633, 78634, 78635, 78636, 78637, 78638, 78639, 78640, 78641, 78642, 78644, 78712, 78713, 78714, 78718, 78719, 78720, 78775, 78776, 78777, 78784, 78785, 78786, 78789, 78791, 78792, 78793, 78848, 78849, 78850, 78853, 78854, 78855, 78857, 78858, 78863, 78864, 78865, 78868, 78869, 78870, 78872, 78873, 78877, 78878, 78879, 78883, 78884, 78885, 78888, 78894, 78895, 78896, 78897, 78898, 78910, 78911, 78912, 78932, 78933, 78934, 78937, 78938, 78939, 78940, 78944, 78946, 78947, 78948, 78949, 78950, 78951, 78952, 79155, 79156, 79157, 79160, 79161, 79165, 79166, 79167, 79171, 79172, 79173, 79228, 79229, 79230, 79234, 79237, 79239, 79302, 79303, 79304, 79307, 79319, 79320, 79321, 79325, 79326, 79327, 79330, 79332, 79333, 79335, 79336, 79400, 79401, 79402, 79405, 79406, 79407, 79411, 79412, 79413, 79416, 79417, 79418, 79419, 79420, 79424, 79425, 79426, 79427, 79428, 79429, 79430, 79431, 79432, 79433, 79434, 79435, 79481, 79482, 79483, 79514, 79515, 79516, 79517, 79518, 79519, 79520, 79521, 79522, 79523, 79524, 79525, 79531, 79532, 79533, 79534, 79535, 79536, 79537, 79538, 79601, 79602, 79603, 79607, 79611, 79612, 79613, 79621, 79622, 79627, 79628, 79629, 79630, 79631, 79632, 79633, 79634, 79636, 79716, 79717, 79718, 79721, 79725, 79787, 79788, 79789, 79792, 79795, 79797, 79858, 79859, 79860, 79863, 79864, 79868, 86363, 86364, 86365]), ('package.json', [161], [161])]"
"chore(i18n,learn): processed translations (#45017)",1644063323,"['curriculum/challenges/italian/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/define-a-primitive-data-type.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/department-numbers.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/discordian-date.md', 'curriculum/challenges/japanese/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md']","[('curriculum/challenges/italian/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md', [48, 50, 51, 52, 54, 56, 57, 58, 77, 78, 79, 80, 81], [65]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/define-a-primitive-data-type.md', [3, 11, 13, 16, 17, 22, 28, 34, 40, 46, 52, 58, 64, 70, 76, 82, 88, 94, 100], [3, 11, 13, 16, 17, 22, 28, 34, 40, 46, 52, 58, 64, 70, 76, 82, 88, 94, 100]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/department-numbers.md', [3, 11, 14, 15, 16, 19, 21, 23, 27, 39, 45, 51, 57], [3, 11, 14, 15, 16, 19, 21, 23, 27, 39, 45, 51, 57]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/discordian-date.md', [3, 11, 15, 21, 30, 39, 48, 57, 66, 75], [3, 11, 15, 21, 30, 39, 48, 57, 66, 75]), ('curriculum/challenges/japanese/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md', [48, 54], [48, 54])]"
fix(curriculum): correct hint text for step-093 penguin (#45023),1644063138,['curriculum/challenges/english/14-responsive-web-design-22/learn-css-transforms-by-building-a-penguin/step-093.md'],"[('curriculum/challenges/english/14-responsive-web-design-22/learn-css-transforms-by-building-a-penguin/step-093.md', [16], [16])]"
"chore(i18n,docs): processed translations (#45016)",1644054933,"['docs/i18n/japanese/devops.md', 'docs/i18n/japanese/how-to-add-cypress-tests.md', 'docs/i18n/japanese/how-to-help-with-video-challenges.md', 'docs/i18n/japanese/how-to-test-translations-locally.md', 'docs/i18n/japanese/how-to-translate-files.md', 'docs/i18n/japanese/how-to-work-on-coding-challenges.md', 'docs/i18n/japanese/how-to-work-on-localized-client-webapp.md', 'docs/i18n/japanese/how-to-work-on-tutorials-that-use-coderoad.md', 'docs/i18n/japanese/moderator-handbook.md']","[('docs/i18n/japanese/devops.md', [107, 109, 111, 113, 115, 117, 118, 119, 121, 129, 137, 139, 141, 143, 145, 147, 149, 151, 152, 153, 155, 157, 159, 161, 166, 168, 170, 172, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 232, 233, 235, 237, 239, 241, 245, 247, 253, 259, 267, 269, 275, 277, 283, 289, 291, 293, 295, 297, 299, 301, 302, 304, 310, 316, 322, 324, 326, 328, 330, 332, 347, 349, 351, 353, 365, 371, 373, 375, 377, 379, 381, 383, 389, 391, 393, 395, 397, 403, 411, 418, 420, 426, 428, 430], [107, 109, 111, 113, 115, 117, 118, 119, 121, 129, 137, 139, 141, 143, 145, 147, 149, 151, 152, 153, 155, 157, 159, 161, 166, 168, 170, 172, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 232, 233, 235, 237, 239, 241, 245, 247, 253, 259, 267, 269, 275, 277, 283, 289, 291, 293, 295, 297, 299, 301, 302, 304, 310, 316, 322, 324, 326, 328, 330, 332, 347, 349, 351, 353, 365, 371, 373, 375, 377, 379, 381, 383, 389, 391, 393, 395, 397, 403, 411, 418, 420, 426, 428, 430]), ('docs/i18n/japanese/how-to-add-cypress-tests.md', [5, 77], [5, 77]), ('docs/i18n/japanese/how-to-help-with-video-challenges.md', [7, 9, 106, 110, 135], [7, 9, 106, 110, 135]), ('docs/i18n/japanese/how-to-test-translations-locally.md', [13, 14, 15, 16, 17, 130], [13, 14, 15, 16, 17, 130]), ('docs/i18n/japanese/how-to-translate-files.md', [124, 130], [124, 130]), ('docs/i18n/japanese/how-to-work-on-coding-challenges.md', [269, 273, 285, 286, 289, 371, 381, 422, 426, 442, 443, 455, 475, 488, 496, 498], [269, 273, 285, 286, 289, 371, 381, 422, 426, 442, 443, 455, 475, 488, 496, 498]), ('docs/i18n/japanese/how-to-work-on-localized-client-webapp.md', [11, 219], [11, 219]), ('docs/i18n/japanese/how-to-work-on-tutorials-that-use-coderoad.md', [1, 5, 9], [1, 5, 9]), ('docs/i18n/japanese/moderator-handbook.md', [7, 46, 104, 196, 373, 434, 436, 480, 534], [7, 46, 104, 196, 373, 434, 436, 480, 534])]"
fix(deps): update dependency sanitize-html to v2.7.0,1644001156,"['client/package.json', 'package-lock.json']","[('client/package.json', [120], [120]), ('package-lock.json', [289, 45857, 45858, 45859, 55694, 89092, 89093, 89094], [289, 45857, 45858, 45859, 55694, 89092, 89093, 89094])]"
"chore(deps): update storybook monorepo to v6.4.18 (#45002)

Co-authored-by: Renovate Bot <bot@renovateapp.com>",1643967231,"['package-lock.json', 'tools/ui-components/package.json']","[('package-lock.json', [5564, 5565, 5566, 5569, 5570, 5571, 5572, 5574, 5606, 5607, 5608, 5617, 5618, 5619, 5622, 5623, 5624, 5625, 5626, 5628, 5665, 5666, 5667, 5670, 5671, 5672, 5673, 5674, 5676, 5677, 5678, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5738, 5739, 5810, 5811, 5812, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5867, 5868, 5869, 5870, 5871, 5872, 5998, 5999, 6000, 6152, 6153, 6154, 6157, 6158, 6159, 6161, 6188, 6189, 6190, 6214, 6215, 6216, 6219, 6220, 6221, 6222, 6223, 6257, 6258, 6259, 6262, 6263, 6264, 6265, 6266, 6601, 6602, 6603, 6606, 6607, 6608, 6609, 6642, 6643, 6644, 6647, 6648, 6649, 6650, 6651, 6652, 6688, 6689, 6690, 6693, 6694, 6695, 6696, 6698, 6699, 6715, 6716, 6717, 6726, 6727, 6728, 6731, 6732, 6733, 6735, 6737, 6759, 6760, 6761, 6770, 6771, 6772, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6809, 6810, 6811, 6885, 6886, 6887, 7102, 7103, 7104, 8231, 8232, 8233, 8256, 8257, 8258, 8259, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8267, 8269, 8270, 8328, 8329, 8330, 8427, 8428, 8429, 8578, 8579, 8580, 8583, 8584, 8585, 8597, 8598, 8599, 8623, 8624, 8625, 8628, 8629, 8640, 8641, 8642, 8651, 8652, 8653, 8666, 8667, 8668, 8677, 8678, 8679, 8682, 8683, 8684, 8685, 8686, 8688, 8713, 8714, 8715, 8739, 8740, 8741, 8753, 8754, 8755, 8764, 8765, 8766, 8770, 8772, 8822, 8823, 8824, 8833, 8834, 8835, 8838, 8839, 8846, 8861, 8862, 8863, 8866, 8867, 8868, 8869, 8870, 8871, 8873, 8874, 8875, 8903, 8904, 8905, 8929, 8930, 8931, 8955, 9018, 9019, 9020, 9310, 9311, 9312, 9890, 9891, 9892, 9903, 9904, 9905, 9914, 9915, 9916, 9920, 9921, 9922, 9923, 9925, 9926, 9927, 9929, 9967, 9968, 9985, 9986, 9987, 10270, 10271, 10272, 10707, 10708, 10709, 10736, 10737, 10738, 10759, 10760, 10761, 10767, 10768, 10769, 10770, 10771, 10772, 10822, 10823, 10824, 11053, 11054, 11055, 12063, 12064, 12065, 12071, 12072, 12073, 12074, 12075, 12076, 12117, 12118, 12119, 12172, 12173, 12174, 12265, 12266, 12267, 12451, 12452, 12453, 12464, 12465, 12466, 12475, 12476, 12477, 12480, 12481, 12482, 12483, 12485, 12507, 12508, 12509, 12533, 12534, 12535, 12541, 12542, 12543, 12545, 12548, 13000, 13001, 13002, 13455, 13456, 13457, 13460, 13482, 13483, 13484, 13596, 13597, 13598, 13601, 13602, 13622, 13623, 13624, 13659, 13660, 13661, 13664, 13665, 13666, 13690, 13691, 13692, 13710, 13711, 13712, 13718, 13738, 13739, 13740, 13749, 13750, 13751, 13755, 13756, 13757, 13758, 13759, 13760, 13761, 13763, 13793, 13794, 13795, 34278, 34279, 34280, 53075, 53076, 53077, 53078, 53080, 53081, 53082, 53146, 53147, 53148, 53160, 53161, 53162, 53163, 53164, 53165, 53166, 53168, 53169, 53170, 53171, 53172, 53173, 53174, 53203, 53204, 53205, 53206, 53207, 53208, 55974, 55975, 55976, 55977, 55979, 55980, 55981, 56038, 56039, 56040, 56052, 56053, 56054, 56055, 56056, 56057, 56058, 56060, 56061, 56062, 56063, 56064, 56065, 56066, 58024, 58025, 58026, 58029, 58030, 58031, 58032, 58034, 58050, 58051, 58052, 58058, 58059, 58060, 58063, 58064, 58065, 58066, 58067, 58069, 58087, 58088, 58089, 58092, 58093, 58094, 58095, 58096, 58098, 58099, 58100, 58115, 58116, 58117, 58118, 58119, 58120, 58121, 58122, 58123, 58124, 58125, 58126, 58127, 58128, 58129, 58130, 58173, 58174, 58175, 58187, 58188, 58189, 58190, 58191, 58192, 58193, 58195, 58196, 58197, 58198, 58199, 58200, 58201, 58276, 58277, 58278, 58389, 58390, 58391, 58394, 58395, 58396, 58398, 58409, 58410, 58411, 58426, 58427, 58428, 58431, 58432, 58433, 58434, 58435, 58450, 58451, 58452, 58455, 58456, 58457, 58458, 58459, 58694, 58695, 58696, 58699, 58700, 58701, 58702, 58716, 58717, 58718, 58721, 58722, 58723, 58724, 58725, 58726, 58743, 58744, 58745, 58748, 58749, 58750, 58751, 58753, 58754, 58762, 58763, 58764, 58770, 58771, 58772, 58775, 58776, 58777, 58779, 58781, 58795, 58796, 58797, 58803, 58804, 58805, 58829, 58830, 58831, 58832, 58833, 58834, 58835, 58836, 58837, 58838, 58839, 58840, 58842, 58843, 58844, 58902, 58903, 58904, 59097, 59098, 59099, 59952, 59953, 59954, 59977, 59978, 59979, 59980, 59981, 59982, 59983, 59984, 59985, 59986, 59987, 59988, 59990, 59991, 60033, 60034, 60035, 60109, 60110, 60111, 60211, 60212, 60213, 60216, 60217, 60218, 60226, 60227, 60228, 60243, 60244, 60245, 60248, 60249, 60256, 60257, 60258, 60264, 60265, 60266, 60275, 60276, 60277, 60283, 60284, 60285, 60288, 60289, 60290, 60291, 60292, 60294, 60311, 60312, 60313, 60328, 60329, 60330, 60338, 60339, 60340, 60346, 60347, 60348, 60352, 60354, 60393, 60394, 60395, 60401, 60402, 60403, 60406, 60407, 60411, 60412, 60413, 60416, 60417, 60418, 60419, 60420, 60421, 60423, 60424, 60425, 60439, 60440, 60441, 60456, 60457, 60458, 60482, 60529, 60530, 60531, 60789, 60790, 60791, 61220, 61221, 61222, 61229, 61230, 61231, 61237, 61238, 61239, 61243, 61244, 61245, 61246, 61248, 61249, 61250, 61252, 61287, 61288, 61289, 61533, 61534, 61535, 61868, 61869, 61870, 61893, 61894, 61895, 61907, 61908, 61909, 61915, 61916, 61917, 61918, 61919, 61920, 61957, 61958, 61959, 62161, 62162, 62163, 62926, 62927, 62928, 62934, 62935, 62936, 62937, 62938, 62939, 62967, 62968, 62969, 63007, 63008, 63009, 63070, 63071, 63072, 63210, 63211, 63212, 63219, 63220, 63221, 63227, 63228, 63229, 63232, 63233, 63234, 63235, 63237, 63251, 63252, 63253, 63268, 63269, 63270, 63276, 63277, 63278, 63280, 63283, 63514, 63515, 63516, 63975, 63976, 63977, 63980, 63994, 63995, 63996, 64072, 64073, 64074, 64077, 64078, 64090, 64091, 64092, 64115, 64116, 64117, 64120, 64121, 64122, 64138, 64139, 64140, 64152, 64153, 64154, 64160, 64172, 64173, 64174, 64180, 64181, 64182, 64186, 64187, 64188, 64189, 64190, 64191, 64192, 64194, 64216, 64217, 64218, 80343, 80344, 80345], [5564, 5565, 5566, 5569, 5570, 5571, 5572, 5574, 5606, 5607, 5608, 5617, 5618, 5619, 5622, 5623, 5624, 5625, 5626, 5628, 5665, 5666, 5667, 5670, 5671, 5672, 5673, 5674, 5676, 5677, 5678, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5738, 5739, 5810, 5811, 5812, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5867, 5868, 5869, 5870, 5871, 5872, 5998, 5999, 6000, 6152, 6153, 6154, 6157, 6158, 6159, 6161, 6188, 6189, 6190, 6214, 6215, 6216, 6219, 6220, 6221, 6222, 6223, 6257, 6258, 6259, 6262, 6263, 6264, 6265, 6266, 6601, 6602, 6603, 6606, 6607, 6608, 6609, 6642, 6643, 6644, 6647, 6648, 6649, 6650, 6651, 6652, 6688, 6689, 6690, 6693, 6694, 6695, 6696, 6698, 6699, 6715, 6716, 6717, 6726, 6727, 6728, 6731, 6732, 6733, 6735, 6737, 6759, 6760, 6761, 6770, 6771, 6772, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6809, 6810, 6811, 6885, 6886, 6887, 7102, 7103, 7104, 8231, 8232, 8233, 8256, 8257, 8258, 8259, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8267, 8269, 8270, 8328, 8329, 8330, 8427, 8428, 8429, 8578, 8579, 8580, 8583, 8584, 8585, 8597, 8598, 8599, 8623, 8624, 8625, 8628, 8629, 8640, 8641, 8642, 8651, 8652, 8653, 8666, 8667, 8668, 8677, 8678, 8679, 8682, 8683, 8684, 8685, 8686, 8688, 8713, 8714, 8715, 8739, 8740, 8741, 8753, 8754, 8755, 8764, 8765, 8766, 8770, 8772, 8822, 8823, 8824, 8833, 8834, 8835, 8838, 8839, 8846, 8861, 8862, 8863, 8866, 8867, 8868, 8869, 8870, 8871, 8873, 8874, 8875, 8903, 8904, 8905, 8929, 8930, 8931, 8955, 9018, 9019, 9020, 9310, 9311, 9312, 9890, 9891, 9892, 9903, 9904, 9905, 9914, 9915, 9916, 9920, 9921, 9922, 9923, 9925, 9926, 9927, 9929, 9967, 9968, 9985, 9986, 9987, 10270, 10271, 10272, 10707, 10708, 10709, 10736, 10737, 10738, 10759, 10760, 10761, 10767, 10768, 10769, 10770, 10771, 10772, 10822, 10823, 10824, 11053, 11054, 11055, 12063, 12064, 12065, 12071, 12072, 12073, 12074, 12075, 12076, 12117, 12118, 12119, 12172, 12173, 12174, 12265, 12266, 12267, 12451, 12452, 12453, 12464, 12465, 12466, 12475, 12476, 12477, 12480, 12481, 12482, 12483, 12485, 12507, 12508, 12509, 12533, 12534, 12535, 12541, 12542, 12543, 12545, 12548, 13000, 13001, 13002, 13455, 13456, 13457, 13460, 13482, 13483, 13484, 13596, 13597, 13598, 13601, 13602, 13622, 13623, 13624, 13659, 13660, 13661, 13664, 13665, 13666, 13690, 13691, 13692, 13710, 13711, 13712, 13718, 13738, 13739, 13740, 13749, 13750, 13751, 13755, 13756, 13757, 13758, 13759, 13760, 13761, 13763, 13793, 13794, 13795, 34278, 34279, 34280, 53075, 53076, 53077, 53078, 53080, 53081, 53082, 53146, 53147, 53148, 53160, 53161, 53162, 53163, 53164, 53165, 53166, 53168, 53169, 53170, 53171, 53172, 53173, 53174, 53203, 53204, 53205, 53206, 53207, 53208, 55974, 55975, 55976, 55977, 55979, 55980, 55981, 56038, 56039, 56040, 56052, 56053, 56054, 56055, 56056, 56057, 56058, 56060, 56061, 56062, 56063, 56064, 56065, 56066, 58024, 58025, 58026, 58029, 58030, 58031, 58032, 58034, 58050, 58051, 58052, 58058, 58059, 58060, 58063, 58064, 58065, 58066, 58067, 58069, 58087, 58088, 58089, 58092, 58093, 58094, 58095, 58096, 58098, 58099, 58100, 58115, 58116, 58117, 58118, 58119, 58120, 58121, 58122, 58123, 58124, 58125, 58126, 58127, 58128, 58129, 58130, 58173, 58174, 58175, 58187, 58188, 58189, 58190, 58191, 58192, 58193, 58195, 58196, 58197, 58198, 58199, 58200, 58201, 58276, 58277, 58278, 58389, 58390, 58391, 58394, 58395, 58396, 58398, 58409, 58410, 58411, 58426, 58427, 58428, 58431, 58432, 58433, 58434, 58435, 58450, 58451, 58452, 58455, 58456, 58457, 58458, 58459, 58694, 58695, 58696, 58699, 58700, 58701, 58702, 58716, 58717, 58718, 58721, 58722, 58723, 58724, 58725, 58726, 58743, 58744, 58745, 58748, 58749, 58750, 58751, 58753, 58754, 58762, 58763, 58764, 58770, 58771, 58772, 58775, 58776, 58777, 58779, 58781, 58795, 58796, 58797, 58803, 58804, 58805, 58829, 58830, 58831, 58832, 58833, 58834, 58835, 58836, 58837, 58838, 58839, 58840, 58842, 58843, 58844, 58902, 58903, 58904, 59097, 59098, 59099, 59952, 59953, 59954, 59977, 59978, 59979, 59980, 59981, 59982, 59983, 59984, 59985, 59986, 59987, 59988, 59990, 59991, 60033, 60034, 60035, 60109, 60110, 60111, 60211, 60212, 60213, 60216, 60217, 60218, 60226, 60227, 60228, 60243, 60244, 60245, 60248, 60249, 60256, 60257, 60258, 60264, 60265, 60266, 60275, 60276, 60277, 60283, 60284, 60285, 60288, 60289, 60290, 60291, 60292, 60294, 60311, 60312, 60313, 60328, 60329, 60330, 60338, 60339, 60340, 60346, 60347, 60348, 60352, 60354, 60393, 60394, 60395, 60401, 60402, 60403, 60406, 60407, 60411, 60412, 60413, 60416, 60417, 60418, 60419, 60420, 60421, 60423, 60424, 60425, 60439, 60440, 60441, 60456, 60457, 60458, 60482, 60529, 60530, 60531, 60789, 60790, 60791, 61220, 61221, 61222, 61229, 61230, 61231, 61237, 61238, 61239, 61243, 61244, 61245, 61246, 61248, 61249, 61250, 61252, 61287, 61288, 61289, 61533, 61534, 61535, 61868, 61869, 61870, 61893, 61894, 61895, 61907, 61908, 61909, 61915, 61916, 61917, 61918, 61919, 61920, 61957, 61958, 61959, 62161, 62162, 62163, 62926, 62927, 62928, 62934, 62935, 62936, 62937, 62938, 62939, 62967, 62968, 62969, 63007, 63008, 63009, 63070, 63071, 63072, 63210, 63211, 63212, 63219, 63220, 63221, 63227, 63228, 63229, 63232, 63233, 63234, 63235, 63237, 63251, 63252, 63253, 63268, 63269, 63270, 63276, 63277, 63278, 63280, 63283, 63514, 63515, 63516, 63975, 63976, 63977, 63980, 63994, 63995, 63996, 64072, 64073, 64074, 64077, 64078, 64090, 64091, 64092, 64115, 64116, 64117, 64120, 64121, 64122, 64138, 64139, 64140, 64152, 64153, 64154, 64160, 64172, 64173, 64174, 64180, 64181, 64182, 64186, 64187, 64188, 64189, 64190, 64191, 64192, 64194, 64216, 64217, 64218, 80343, 80344, 80345]), ('tools/ui-components/package.json', [34, 35, 36, 37, 39, 40, 41], [34, 35, 36, 37, 39, 40, 41])]"
"chore(i18n,docs): processed translations (#44964)",1643927142,"['docs/i18n/chinese-traditional/how-to-open-a-pull-request.md', 'docs/i18n/chinese/how-to-open-a-pull-request.md', 'docs/i18n/espanol/how-to-open-a-pull-request.md', 'docs/i18n/italian/how-to-open-a-pull-request.md', 'docs/i18n/japanese/FAQ.md', 'docs/i18n/japanese/devops.md', 'docs/i18n/japanese/how-to-add-cypress-tests.md', 'docs/i18n/japanese/how-to-help-with-video-challenges.md', 'docs/i18n/japanese/how-to-open-a-pull-request.md', 'docs/i18n/japanese/how-to-proofread-files.md', 'docs/i18n/japanese/how-to-setup-freecodecamp-locally.md', 'docs/i18n/japanese/how-to-setup-wsl.md', 'docs/i18n/japanese/how-to-test-translations-locally.md', 'docs/i18n/japanese/how-to-translate-files.md', 'docs/i18n/japanese/how-to-use-docker-on-windows-home.md', 'docs/i18n/japanese/how-to-work-on-coding-challenges.md', 'docs/i18n/japanese/how-to-work-on-localized-client-webapp.md', 'docs/i18n/japanese/how-to-work-on-practice-projects.md', 'docs/i18n/japanese/how-to-work-on-the-docs-theme.md', 'docs/i18n/japanese/how-to-work-on-the-news-theme.md', 'docs/i18n/japanese/how-to-work-on-tutorials-that-use-coderoad.md', 'docs/i18n/japanese/index.md', 'docs/i18n/japanese/moderator-handbook.md', 'docs/i18n/japanese/security-hall-of-fame.md', 'docs/i18n/japanese/security.md', 'docs/i18n/portuguese/how-to-open-a-pull-request.md', 'docs/i18n/ukrainian/how-to-open-a-pull-request.md']","[('docs/i18n/chinese-traditional/how-to-open-a-pull-request.md', [47], [47]), ('docs/i18n/chinese/how-to-open-a-pull-request.md', [47], [47]), ('docs/i18n/espanol/how-to-open-a-pull-request.md', [47], [47]), ('docs/i18n/italian/how-to-open-a-pull-request.md', [47], [47]), ('docs/i18n/japanese/FAQ.md', [3, 29, 31, 35, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 64, 69, 80, 82], [3, 29, 31, 35, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 64, 69, 80, 82]), ('docs/i18n/japanese/devops.md', [1, 3, 5, 7, 9, 11, 13, 14, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 63, 72, 80, 82, 84, 89, 91, 97, 105], [1, 3, 5, 7, 9, 11, 13, 14, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 63, 72, 80, 82, 84, 89, 91, 97, 105]), ('docs/i18n/japanese/how-to-add-cypress-tests.md', [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 33, 39, 45, 47, 49, 51, 57, 63, 69, 75, 77], [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 33, 39, 45, 47, 49, 51, 57, 63, 69, 75, 77]), ('docs/i18n/japanese/how-to-help-with-video-challenges.md', [1, 3, 5, 7, 9, 11, 13, 26, 34, 38, 42, 46, 50, 54, 57, 59, 61, 63, 64, 65, 66, 68, 70, 72, 74, 83, 84, 86, 88, 90, 92, 94, 102, 106, 110, 113, 120, 128, 130, 135, 137, 167, 199, 201, 203], [1, 3, 5, 7, 9, 11, 13, 26, 34, 38, 42, 46, 50, 54, 57, 59, 61, 63, 64, 65, 66, 68, 70, 72, 74, 83, 84, 86, 88, 90, 92, 94, 101, 105, 109, 113, 120, 128, 130, 135, 137, 167, 199, 201, 203]), ('docs/i18n/japanese/how-to-open-a-pull-request.md', [1, 3, 5, 7, 9, 13, 17, 19, 21, 22, 23, 24, 25, 26, 28, 30, 32, 34, 36, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 100, 112, 118, 120, 122, 131, 133, 149, 158, 165, 179], [1, 3, 5, 7, 9, 13, 17, 19, 21, 22, 23, 24, 25, 26, 28, 30, 32, 34, 36, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 100, 112, 118, 120, 122, 131, 133, 149, 158, 165, 179]), ('docs/i18n/japanese/how-to-proofread-files.md', [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54], [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54]), ('docs/i18n/japanese/how-to-setup-freecodecamp-locally.md', [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 24, 25, 26, 27, 29, 31, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 78, 82, 85, 87, 89, 91, 93, 95, 97, 99, 105, 107, 109, 111, 113, 115, 117, 123, 129, 135, 144, 146, 148, 149, 150, 152, 154, 156, 158, 160, 162, 164, 166, 169, 170, 189, 191, 193, 195, 201, 203, 205, 207, 219, 227, 229, 231, 237, 239, 245, 247, 249, 251, 253, 255, 257, 259, 263, 267, 270, 272, 274, 276, 282, 291, 297, 299, 301, 303, 305, 311, 317, 323, 329, 331, 333, 335, 341, 343, 353, 355, 357, 359, 365, 382, 384, 390, 396, 402, 417, 423, 430, 432, 434, 443, 445, 447, 449, 455, 457, 463, 465, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 491, 493, 495, 499, 501, 503, 512, 514, 520, 522, 530, 534, 537, 539, 543, 551, 565, 567, 569, 571, 573, 575], [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 24, 25, 26, 27, 29, 31, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 78, 82, 85, 87, 89, 91, 93, 95, 97, 99, 105, 107, 109, 111, 113, 115, 117, 123, 129, 135, 144, 146, 148, 149, 150, 152, 154, 156, 158, 160, 162, 164, 166, 169, 170, 189, 191, 193, 195, 201, 203, 205, 207, 219, 227, 229, 231, 237, 239, 245, 247, 249, 251, 253, 255, 257, 259, 263, 267, 270, 272, 274, 276, 282, 291, 297, 299, 301, 303, 305, 311, 317, 323, 329, 331, 333, 335, 341, 343, 353, 355, 357, 359, 365, 382, 384, 390, 396, 402, 417, 423, 430, 432, 434, 443, 445, 447, 449, 455, 457, 463, 465, 467, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 491, 493, 495, 499, 501, 503, 512, 514, 520, 522, 530, 534, 537, 539, 543, 551, 565, 567, 569, 571, 573, 575]), ('docs/i18n/japanese/how-to-setup-wsl.md', [1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 33, 35, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 81, 92, 94, 96, 98, 114, 120, 122, 126, 128, 130, 131], [1, 3, 5, 7, 9, 11, 13, 15, 17, 21, 23, 33, 35, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 81, 92, 94, 96, 98, 114, 120, 122, 126, 128, 130, 131]), ('docs/i18n/japanese/how-to-test-translations-locally.md', [1, 3, 5, 7, 9, 11, 13, 14, 15, 16, 17, 19, 97, 99, 101, 103, 130, 137, 139, 154, 166, 177, 191, 193, 195, 197, 199], [1, 3, 5, 7, 9, 11, 13, 14, 15, 16, 17, 19, 97, 99, 101, 103, 130, 137, 139, 154, 166, 177, 191, 193, 195, 197, 199]), ('docs/i18n/japanese/how-to-translate-files.md', [120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 136, 140, 143, 150, 154, 158, 161, 168, 172, 179, 186, 190, 197, 206, 208, 210, 216, 218, 221, 223, 227, 230, 232, 236, 239, 241, 245, 247, 249, 251, 253, 255, 257, 259, 261, 265, 267, 269, 270, 271, 273], [120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 136, 140, 143, 150, 154, 158, 161, 168, 172, 179, 186, 190, 197, 206, 208, 210, 216, 218, 221, 223, 227, 230, 232, 236, 239, 241, 245, 247, 249, 251, 253, 255, 257, 259, 261, 265, 267, 269, 270, 271, 273]), ('docs/i18n/japanese/how-to-use-docker-on-windows-home.md', [1, 3, 5, 7, 9, 15], [1, 3, 5, 7, 9, 15]), ('docs/i18n/japanese/how-to-work-on-coding-challenges.md', [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 26, 28, 30, 32, 34, 36, 40, 41, 42, 43, 49, 57, 61, 67, 78, 85, 91, 96, 121, 124, 130, 136, 141, 145, 149, 153, 157, 161, 166, 172, 174, 176, 178, 179, 181, 193, 195, 203, 205, 207, 209, 211, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 244, 246, 248, 250, 252, 254, 256, 258, 260, 262, 263, 266, 269, 270, 271, 273, 275, 280, 285, 286, 287, 289, 291, 293, 295, 297, 299, 301, 303, 304, 305, 307, 309, 311, 313, 316, 319, 325, 338, 347, 349, 369, 371, 373, 376, 381, 383, 385, 387, 389, 391, 393, 394, 395, 396, 398, 400, 403, 407, 409, 411, 413, 414, 418, 420, 422, 424, 426, 430, 440, 442, 443, 445, 447, 448, 453, 455, 457, 463, 473, 475, 481, 486, 488, 490, 492, 494, 496, 498], [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 26, 28, 30, 32, 34, 36, 40, 41, 42, 43, 49, 57, 61, 67, 78, 85, 91, 96, 121, 124, 130, 136, 141, 145, 149, 153, 157, 161, 166, 172, 174, 176, 178, 179, 181, 193, 195, 203, 205, 207, 209, 211, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 244, 246, 248, 250, 252, 254, 256, 258, 260, 262, 263, 266, 269, 270, 271, 273, 275, 280, 285, 286, 287, 289, 291, 293, 295, 297, 299, 301, 303, 304, 305, 307, 309, 311, 313, 316, 319, 325, 338, 347, 349, 369, 371, 373, 376, 381, 383, 385, 387, 389, 391, 393, 394, 395, 396, 398, 400, 403, 407, 409, 411, 413, 414, 418, 420, 422, 424, 426, 430, 440, 442, 443, 445, 447, 448, 453, 455, 457, 463, 473, 475, 481, 486, 488, 490, 492, 494, 496, 498]), ('docs/i18n/japanese/how-to-work-on-localized-client-webapp.md', [1, 3, 5, 7, 9, 11, 13, 15, 17, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 93, 95, 97, 99, 101, 103, 105, 117, 135, 137, 152, 169, 171, 173, 175, 196, 198, 200, 219, 221, 246, 248, 250, 252, 254, 256, 258, 260, 262, 264], [1, 3, 5, 7, 9, 11, 13, 15, 17, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 93, 95, 97, 99, 101, 103, 105, 117, 135, 137, 152, 169, 171, 173, 175, 196, 198, 200, 219, 221, 246, 248, 250, 252, 254, 256, 258, 260, 262, 264]), ('docs/i18n/japanese/how-to-work-on-practice-projects.md', [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 20, 26, 28, 30, 32, 34, 35, 41, 43, 45, 47, 49, 50, 56, 58, 60, 62, 63, 69, 71, 73, 75, 86, 88, 100, 102, 114, 116, 118, 119], [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 20, 26, 28, 30, 32, 34, 35, 41, 43, 45, 47, 49, 50, 56, 58, 60, 62, 63, 69, 71, 73, 75, 86, 88, 100, 102, 114, 116, 118, 119]), ('docs/i18n/japanese/how-to-work-on-the-docs-theme.md', [1, 3, 5, 7, 9, 11, 13, 14, 15, 16, 17, 19, 21, 28, 34, 40, 42, 48, 54], [1, 3, 5, 7, 9, 11, 13, 14, 15, 16, 17, 19, 21, 28, 34, 40, 42, 48, 54]), ('docs/i18n/japanese/how-to-work-on-the-news-theme.md', [1, 3, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 28, 41, 43, 45, 52, 54, 56, 63, 65, 67, 69, 76, 78, 80, 82, 88, 90, 92, 93, 94, 96, 98, 100], [1, 3, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 28, 41, 43, 45, 52, 54, 56, 63, 65, 67, 69, 76, 78, 80, 82, 88, 90, 92, 93, 94, 96, 98, 100]), ('docs/i18n/japanese/how-to-work-on-tutorials-that-use-coderoad.md', [1, 3, 5, 7, 9, 11, 13, 15, 19, 21, 23, 25, 27, 29, 31, 33, 37, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 99, 101, 103, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 136, 138], [1, 3, 5, 7, 9, 11, 13, 15, 19, 21, 23, 25, 27, 29, 31, 33, 37, 39, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 59, 61, 63, 65, 67, 71, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 99, 101, 103, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 136, 138]), ('docs/i18n/japanese/index.md', [1, 3, 5, 7, 9, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43], [1, 3, 5, 7, 9, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43]), ('docs/i18n/japanese/moderator-handbook.md', [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 128, 132, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 194, 196, 198, 200, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 229, 231, 233, 234, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 310, 312, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 338, 339, 341, 345, 347, 349, 353, 355, 357, 359, 361, 364, 365, 368, 370, 373, 375, 376, 379, 382, 384, 386, 390, 393, 395, 398, 400, 402, 404, 414, 416, 420, 423, 425, 428, 430, 432, 434, 436, 438, 441, 443, 445, 448, 450, 452, 454, 458, 461, 463, 466, 468, 470, 472, 475, 478, 480, 482, 485, 487, 490, 492, 494, 496, 499, 502, 504, 506, 509, 512, 514, 516, 519, 521, 524, 526, 528, 534, 536, 538], [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 128, 132, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 194, 196, 198, 200, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 229, 231, 233, 234, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 310, 312, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 338, 339, 341, 345, 347, 349, 353, 355, 357, 359, 361, 364, 365, 368, 370, 373, 375, 376, 379, 382, 384, 386, 390, 393, 395, 398, 400, 402, 404, 414, 416, 420, 423, 425, 428, 430, 432, 434, 436, 438, 441, 443, 445, 448, 450, 452, 454, 458, 461, 463, 466, 468, 470, 472, 475, 478, 480, 482, 485, 487, 490, 492, 494, 496, 499, 502, 504, 506, 509, 512, 514, 516, 519, 521, 524, 526, 528, 534, 536, 538]), ('docs/i18n/japanese/security-hall-of-fame.md', [1, 3, 5, 7, 8, 10], [1, 3, 5, 7, 8, 10]), ('docs/i18n/japanese/security.md', [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46], [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46]), ('docs/i18n/portuguese/how-to-open-a-pull-request.md', [47], [47]), ('docs/i18n/ukrainian/how-to-open-a-pull-request.md', [47], [47])]"
fix(deps): update dependency @babel/standalone to v7.17.1,1643925409,"['client/package.json', 'package-lock.json']","[('client/package.json', [41], [41]), ('package-lock.json', [210, 2555, 2556, 2557, 54929, 54930, 54931, 55599], [210, 2555, 2556, 2557, 54929, 54930, 54931, 55599])]"
"chore(i18n,learn): processed translations (#45001)",1643915792,"['curriculum/challenges/espanol/01-responsive-web-design/applied-accessibility/use-tabindex-to-add-keyboard-focus-to-an-element.md', 'curriculum/challenges/espanol/03-front-end-development-libraries/react/render-conditionally-from-props.md', 'curriculum/challenges/italian/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/accumulator-factory.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/ackermann-function.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/align-columns.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/amicable-pairs.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/averages-mode.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/averages-pythagorean-means.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/averages-root-mean-square.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/babbage-problem.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/balanced-brackets.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/circles-of-given-radius-through-two-points.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/closest-pair-problem.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/combinations.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/comma-quibbling.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/compare-a-list-of-strings.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/convert-seconds-to-compound-duration.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/count-occurrences-of-a-substring.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/count-the-coins.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/cramers-rule.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/cusip.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/cut-a-rectangle.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/date-format.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/date-manipulation.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/day-of-the-week.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/deal-cards-for-freecell.md', 'curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/deepcopy.md', 'curriculum/challenges/japanese/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md', 'curriculum/challenges/japanese/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md', 'curriculum/challenges/portuguese/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md', 'curriculum/challenges/ukrainian/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md']","[('curriculum/challenges/espanol/01-responsive-web-design/applied-accessibility/use-tabindex-to-add-keyboard-focus-to-an-element.md', [14], [14]), ('curriculum/challenges/espanol/03-front-end-development-libraries/react/render-conditionally-from-props.md', [11], [11]), ('curriculum/challenges/italian/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md', [131, 132, 134, 135, 136, 137, 139], [131, 133, 134, 135, 136, 138]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/accumulator-factory.md', [3, 11, 15, 17, 19, 21, 23, 27, 33, 39, 45], [3, 11, 15, 17, 19, 21, 23, 27, 33, 39, 45]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/ackermann-function.md', [3, 11, 13, 17, 21, 25, 31, 37, 43, 49], [3, 11, 13, 17, 21, 25, 31, 37, 43, 49]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/align-columns.md', [3, 11, 15, 32, 34, 35, 36, 37, 38, 39, 41, 51, 57, 63, 69], [3, 11, 15, 32, 34, 35, 36, 37, 38, 39, 41, 51, 57, 63, 69]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/amicable-pairs.md', [3, 11, 13, 15, 18, 19, 24, 28, 34, 40, 46], [3, 11, 13, 15, 18, 19, 24, 28, 34, 40, 46]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/averages-mode.md', [3, 11, 13, 15, 19, 25, 31], [3, 11, 13, 15, 19, 25, 31]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/averages-pythagorean-means.md', [3, 11, 13, 16, 18, 20, 26, 28, 43, 49], [3, 11, 13, 16, 18, 20, 26, 28, 43, 49]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/averages-root-mean-square.md', [3, 11, 13, 15, 21, 27], [3, 11, 13, 15, 21, 27]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/babbage-problem.md', [3, 11, 14, 15, 18, 20, 24, 28, 34], [3, 11, 14, 15, 18, 20, 24, 28, 34]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/balanced-brackets.md', [3, 11, 13, 25, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 103, 109, 115, 121, 127, 133], [3, 11, 13, 25, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 103, 109, 115, 121, 127, 133]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/circles-of-given-radius-through-two-points.md', [3, 11, 13, 16, 17, 18, 19, 24, 26, 29, 30, 31, 34, 46, 52, 58, 64, 70, 76], [3, 11, 13, 16, 17, 18, 19, 24, 26, 29, 30, 31, 34, 46, 52, 58, 64, 70, 76]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/closest-pair-problem.md', [3, 11, 13, 15, 33, 68, 70, 80, 98, 103, 109, 115, 124, 130, 139, 145], [3, 11, 13, 15, 33, 68, 70, 80, 98, 103, 109, 115, 124, 130, 139, 145]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/combinations.md', [3, 11, 13, 15, 31, 37, 43], [3, 11, 13, 15, 31, 37, 43]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/comma-quibbling.md', [3, 11, 15, 18, 19, 20, 21, 24, 27, 33, 37, 43, 49, 55, 61, 67], [3, 11, 15, 18, 19, 20, 21, 24, 27, 33, 37, 43, 49, 55, 61, 67]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/compare-a-list-of-strings.md', [3, 11, 14, 15, 20, 26, 32, 38, 44, 50, 56, 62, 68, 74, 80, 86], [3, 11, 14, 15, 20, 26, 32, 38, 44, 50, 56, 62, 68, 74, 80, 86]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/convert-seconds-to-compound-duration.md', [3, 11, 14, 15, 18, 20, 22, 23, 24, 25, 26, 28, 31, 33, 35, 36, 37, 38, 43, 46, 49, 55, 61, 67, 73], [3, 11, 14, 15, 18, 20, 22, 23, 24, 25, 26, 28, 31, 33, 35, 36, 37, 38, 43, 46, 49, 55, 61, 67, 73]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/count-occurrences-of-a-substring.md', [3, 11, 13, 16, 17, 20, 22, 24, 28, 34, 40, 46], [3, 11, 13, 16, 17, 20, 22, 24, 28, 34, 40, 46]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/count-the-coins.md', [3, 11, 14, 15, 16, 17, 20, 23, 24, 25, 26, 27, 28, 33, 37, 43, 49, 55], [3, 11, 14, 15, 16, 17, 20, 23, 24, 25, 26, 27, 28, 33, 37, 43, 49, 55]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/cramers-rule.md', [3, 11, 13, 17, 21, 27, 31, 35, 41, 47], [3, 11, 13, 17, 21, 27, 31, 35, 41, 47]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/cusip.md', [11, 15, 19, 25, 31, 37, 43, 49, 55, 61, 67, 73], [11, 15, 19, 25, 31, 37, 43, 49, 55, 61, 67, 73]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/cut-a-rectangle.md', [3, 11, 95, 99, 105, 111, 117, 123, 129, 135], [3, 11, 95, 99, 105, 111, 117, 123, 129, 135]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/date-format.md', [3, 11, 13, 14, 15, 16, 17, 19, 28, 34, 40, 46], [3, 11, 13, 14, 15, 16, 17, 19, 28, 34, 40, 46]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/date-manipulation.md', [3, 11, 13, 15, 19, 25, 31, 39, 45, 51, 57], [3, 11, 13, 15, 19, 25, 31, 39, 45, 51, 57]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/day-of-the-week.md', [3, 11, 15, 19, 25, 31, 37], [3, 11, 15, 19, 25, 31, 37]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/deal-cards-for-freecell.md', [3, 11, 13, 15, 23, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 50, 64, 80, 82, 86, 92, 98, 104, 110], [3, 11, 13, 15, 23, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 50, 64, 80, 82, 86, 92, 98, 104, 110]), ('curriculum/challenges/italian/10-coding-interview-prep/rosetta-code/deepcopy.md', [11, 13, 16, 17, 18, 19, 24, 30, 36, 42, 48], [11, 13, 16, 17, 18, 19, 24, 30, 36, 42, 48]), ('curriculum/challenges/japanese/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md', [48, 50, 51, 52, 54, 56, 57, 58, 77, 78, 79, 80, 81], [65]), ('curriculum/challenges/japanese/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md', [131, 132, 134, 135, 136, 137, 139], [131, 133, 134, 135, 136, 138]), ('curriculum/challenges/portuguese/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md', [131, 132, 134, 135, 136, 137, 139], [131, 133, 134, 135, 136, 138]), ('curriculum/challenges/ukrainian/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md', [131, 132, 134, 135, 136, 137, 139], [131, 133, 134, 135, 136, 138])]"
chore(deps): update dependency @types/react to v17.0.39,1643906514,"['package-lock.json', 'package.json']","[('package-lock.json', [53, 14830, 14831, 14832, 65133, 65134, 65135], [53, 14830, 14831, 14832, 65133, 65134, 65135]), ('package.json', [128], [128])]"
"feat: add image component (#44590)

Co-authored-by: IsmailTlemcani <ismail.tlemcani@gmail.com>",1643885294,"['tools/ui-components/src/image/image.stories.tsx', 'tools/ui-components/src/image/image.test.tsx', 'tools/ui-components/src/image/image.tsx', 'tools/ui-components/src/image/image.types.ts', 'tools/ui-components/src/image/index.tsx', 'tools/ui-components/src/index.ts']","[('tools/ui-components/src/image/image.stories.tsx', [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31], []), ('tools/ui-components/src/image/image.test.tsx', [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], []), ('tools/ui-components/src/image/image.tsx', [1, 2, 4, 5, 7, 8, 9, 10, 11], []), ('tools/ui-components/src/image/image.types.ts', [1, 2, 3, 4, 5, 6, 7], []), ('tools/ui-components/src/image/index.tsx', [1], []), ('tools/ui-components/src/index.ts', [4], [])]"
chore(deps): update dependency @testing-library/jest-dom to v5.16.2,1643866538,"['client/package.json', 'package-lock.json', 'package.json', 'tools/ui-components/package.json']","[('client/package.json', [134], [134]), ('package-lock.json', [36, 303, 14102, 14103, 14104, 53083, 55616, 55982, 64448, 64449, 64450], [36, 303, 14102, 14103, 14104, 53083, 55616, 55982, 64448, 64449, 64450]), ('package.json', [111], [111]), ('tools/ui-components/package.json', [42], [42])]"
chore(deps): update babel monorepo to v7.17.0,1643857715,"['client/package.json', 'curriculum/package.json', 'package-lock.json', 'package.json', 'tools/ui-components/package.json']","[('client/package.json', [41, 131], [41, 131]), ('curriculum/package.json', [32, 36], [32, 36]), ('package-lock.json', [29, 210, 300, 422, 426, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 696, 697, 698, 700, 702, 705, 706, 708, 709, 714, 746, 747, 748, 763, 764, 765, 767, 1097, 1098, 1099, 1102, 1103, 1157, 1158, 1159, 2513, 2514, 2515, 2521, 2555, 2556, 2557, 2576, 2577, 2578, 2581, 2586, 2587, 2617, 2618, 2619, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 41398, 41399, 41400, 47105, 53069, 53636, 53637, 53638, 53639, 53640, 53641, 53642, 53643, 53644, 53645, 53692, 53693, 53694, 53696, 53698, 53701, 53702, 53704, 53705, 53710, 53729, 53730, 53731, 53739, 53740, 53741, 53743, 53983, 53984, 53985, 53988, 53989, 54025, 54026, 54027, 54899, 54900, 54901, 54907, 54929, 54930, 54931, 54944, 54945, 54946, 54949, 54954, 54955, 54976, 54977, 54978, 55599, 55600, 55789, 55793, 55967, 57190, 57191, 57192, 57193, 57194, 57195, 57196, 57197, 57198, 57199, 57200, 57201, 57202, 57203, 85791, 85792, 85793, 90080], [29, 210, 300, 422, 426, 683, 684, 685, 688, 691, 692, 694, 695, 700, 701, 733, 734, 735, 750, 751, 752, 754, 1084, 1085, 1086, 1089, 1090, 1144, 1145, 1146, 2500, 2501, 2502, 2508, 2542, 2543, 2544, 2563, 2564, 2565, 2568, 2573, 2574, 2604, 2605, 2606, 41368, 41369, 41370, 47075, 47076, 53040, 53653, 53654, 53655, 53658, 53661, 53662, 53664, 53665, 53670, 53671, 53690, 53691, 53692, 53700, 53701, 53702, 53704, 53944, 53945, 53946, 53949, 53950, 53986, 53987, 53988, 54860, 54861, 54862, 54868, 54890, 54891, 54892, 54905, 54906, 54907, 54910, 54915, 54916, 54937, 54938, 54939, 55560, 55561, 55750, 55754, 55928, 85738, 85739, 85740, 90027, 90028]), ('package.json', [104], [104]), ('tools/ui-components/package.json', [28], [28])]"
fix(deps): update dependency babel-plugin-preval to v5.1.0,1643848434,"['client/package.json', 'package-lock.json']","[('client/package.json', [58], [58]), ('package-lock.json', [227, 17550, 17551, 17552, 17554, 17555, 17556, 17564, 17565, 17566, 17567, 17568, 17569, 17570, 17571, 17572, 17573, 17574, 17575, 17576, 17577, 17578, 17579, 17580, 17581, 17582, 17583, 17584, 17585, 17586, 17587, 17588, 17589, 17590, 17591, 17592, 55583, 67328, 67329, 67330, 67332, 67333, 67334, 67336, 67337, 67338, 67339, 67340, 67341, 67342, 67343, 67344, 67345, 67346, 67347, 67348, 67349, 67350, 67351, 67352, 67353, 67354, 67355, 67356, 67357, 67358, 67359], [227, 14273, 14286, 14295, 14305, 17554, 17555, 17556, 17558, 17559, 55557, 64526, 64539, 64548, 64558, 67306, 67307, 67308, 67310, 67311])]"
chore(deps): update codesee to v0.177.1,1643839974,"['client/package.json', 'package-lock.json']","[('client/package.json', [132, 133], [132, 133]), ('package-lock.json', [301, 302, 2644, 2645, 2646, 2661, 2662, 2663, 54942, 54943, 54944, 54956, 54957, 54958, 55536, 55537], [301, 302, 2644, 2645, 2646, 2661, 2662, 2663, 54942, 54943, 54944, 54956, 54957, 54958, 55536, 55537])]"
"fix(curriculum): add two edge test cases to the sorted union problem (#44860)

* fix: fixed solution of sorted union

* fix: improved solution of sorted union problem",1643826511,['curriculum/challenges/english/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md'],"[('curriculum/challenges/english/02-javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union.md', [48, 50, 51, 52, 54, 56, 57, 58, 77, 78, 79, 80, 81], [65])]"
chore(client): add view_type meta to analytics (#44999),1643819664,['client/src/redux/ga-saga.js'],"[('client/src/redux/ga-saga.js', [8, 9, 25, 27, 28, 29, 30, 31, 43, 44, 45], [8, 34])]"
"fix(client): console output for sets and maps (#44966)

Co-authored-by: IsmailTlemcani <ismail.tlemcani@gmail.com>",1643802829,['client/src/utils/format.js'],"[('client/src/utils/format.js', [6, 7, 8, 9, 10, 11, 12, 13], [])]"
fix(deps): update dependency react-instantsearch-dom to v6.22.0,1643802157,"['client/package.json', 'package-lock.json']","[('client/package.json', [102], [102]), ('package-lock.json', [271, 43410, 43411, 43412, 43425, 43426, 43427, 43434, 55608, 87138, 87139, 87140, 87149, 87150, 87151, 87158], [271, 43410, 43411, 43412, 43425, 43426, 43427, 43434, 55608, 87138, 87139, 87140, 87149, 87150, 87151, 87158])]"
chore(deps): update dependency rollup to v2.67.0,1643795147,"['package-lock.json', 'tools/ui-components/package.json']","[('package-lock.json', [45244, 45245, 45246, 53038, 55929, 88555, 88556, 88557], [45244, 45245, 45246, 53038, 55929, 88555, 88556, 88557]), ('tools/ui-components/package.json', [52], [52])]"
chore(deps): update codesee to v0.177.0,1643771479,"['client/package.json', 'package-lock.json']","[('client/package.json', [132, 133], [132, 133]), ('package-lock.json', [301, 302, 2644, 2645, 2646, 2661, 2662, 2663, 54942, 54943, 54944, 54956, 54957, 54958, 55536, 55537], [301, 302, 2644, 2645, 2646, 2661, 2662, 2663, 54942, 54943, 54944, 54956, 54957, 54958, 55536, 55537])]"
fix(curriculum): fixed test for binary search tree challenge (#44993),1643767585,['curriculum/challenges/english/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md'],"[('curriculum/challenges/english/10-coding-interview-prep/data-structures/delete-a-node-with-one-child-in-a-binary-search-tree.md', [131, 132, 134, 135, 136, 137, 139], [131, 133, 134, 135, 136, 138])]"
chore(deps): update dependency lint-staged to v12.3.3,1643763595,"['package-lock.json', 'package.json']","[('package-lock.json', [88, 34296, 34297, 34298, 34394, 34395, 34396, 80299, 80300, 80301, 80365, 80366, 80367], [88, 34296, 34297, 34298, 34394, 34395, 34396, 80299, 80300, 80301, 80365, 80366, 80367]), ('package.json', [163], [163])]"
chore(tools): update import statement (#44990),1643751364,['tools/ui-components/src/introduction.stories.mdx'],"[('tools/ui-components/src/introduction.stories.mdx', [1], [1])]"
"chore(i18n,learn): processed translations (#44991)",1643747573,['curriculum/challenges/italian/10-coding-interview-prep/data-structures/check-if-binary-search-tree.md'],"[('curriculum/challenges/italian/10-coding-interview-prep/data-structures/check-if-binary-search-tree.md', [42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 135], [117])]"
docs: add missing & in 'Compare & pull request' (#44985),1643742726,['docs/how-to-open-a-pull-request.md'],"[('docs/how-to-open-a-pull-request.md', [48], [48])]"
